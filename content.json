{"pages":[{"title":"about","text":"","link":"/about/index.html"},{"title":"分类","text":"","link":"/categories/index.html"},{"title":"标签","text":"","link":"/tags/index.html"}],"posts":[{"title":"C 语言学习之路","text":"study_01123456789101112131415161718192021222324252627#include&lt;stdio.h&gt;int main(void){ int number = 50; printf(&quot;number = %d\\n&quot;, number); /* %d 十进制有符号整数 %u 十进制无符号整数 %f 浮点数 %s 字符串 %c 单个字符 %p 指针的值 %e 指数形式的浮点数 %x, %X 无符号以十六进制表示的整数 %o 无符号以八进制表示的整数 %g 把输出的值按照 %e 或者 %f 类型中输出长度较小的方式输出 %p 输出地址符 %lu 32 位无符号整数 %llu 64 位无符号整数 \\n 换行 \\f 清屏并换页 \\r 回车 \\t Tab 符 \\xhh 表示一个 ASCII 码用 16 进表示, 其中 hh 是 1 到 2 个 16 进制数 */ return 0;} study_02123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960#include&lt;stdio.h&gt;int main(void){ unsigned int number = 50; double money = 99.9; printf(&quot;number = %u\\n&quot;, number); // 引号别写错了 C 语言区分大小写 printf(&quot;money = %lf\\n&quot;, money); /* 标识符 开头只能是大小写字母和下划线, 且不能有标点 用 a b 是不规范的 准则：见名知意 下划线命名法：sun_flower = 100; 驼峰命名法（其他语言）perl：int sunFlowerValues = 100; 匈牙利命名法（微软 Excel) 不能用的标识符： auto 声明自动变量 break 跳出当前循环 case 开关语句分支 char 声明字符型变量或函数返回值类型 const 定义常量，如果一个变量被 const 修饰，那么它的值就不能再被改变 continue 结束当前循环，开始下一轮循环 default 开关语句中的 &quot; 其它 &quot; 分支 do 循环语句的循环体 double 声明双精度浮点型变量或函数返回值类型 else 条件语句否定分支（与 if 连用） enum 声明枚举类型 extern 声明变量或函数是在其它文件或本文件的其他位置定义 float 声明浮点型变量或函数返回值类型 for 一种循环语句 goto 无条件跳转语句 if 条件语句 int 声明整型变量或函数 long 声明长整型变量或函数返回值类型 register 声明寄存器变量 return 子程序返回语句（可以带参数，也可不带参数） short 声明短整型变量或函数 signed 声明有符号类型变量或函数 sizeof 计算数据类型或变量长度（即所占字节数） static 声明静态变量 struct 声明结构体类型 switch 用于开关语句 typedef 用以给数据类型取别名 unsigned 声明无符号类型变量或函数 union 声明共用体类型 void 声明函数无返回值或无参数，声明无类型指针 volatile 说明变量在程序执行中可被隐含地改变 while 循环语句的循环条件 C99 新增关键字 _Bool _Complex _Imaginary inline restrict C11 新增关键字 _Alignas _Alignof _Atomic _Generic _Noreturn _Static_assert _Thread_local */ return 0;} study_03123456789101112131415161718192021222324252627282930313233343536373839404142#include&lt;stdio.h&gt;int main(void){ int sun_flower_sum = 50; printf(&quot;sun_flower_sum = %d\\n&quot;, sun_flower_sum); sun_flower_sum = 9999; printf(&quot;sun_flower_sum = % d\\n&quot;, sun_flower_sum); #define PEAS 100 const int PEPPER = 75; printf(&quot;PEAS = %d\\tPEPPER = %d\\n&quot;, PEAS, PEPPER); return 0;} /* #define PI 3.14 #define SUN_FLOWER 100 宏定义 定义常量 用大写 定义后不能改变 */ /* 字符常量： \\\\ \\ 字符 \\' ' 字符 \\&quot; &quot; 字符 \\? ? 字符 \\a 警报铃声 \\b 退格键 \\f 换页符 \\n 换行符 \\r 回车 \\t 水平制表符 \\v 垂直制表符 \\ooo 一到三位的八进制数 \\xhh . . . 一个或多个数字的十六进制数 */ study_041234567891011121314151617181920#include&lt;stdio.h&gt;int main(void){ int number_1 = 1; int number_2 = 2; printf(&quot;sum = %d\\n&quot;, number_1 + number_2); return 0;} /* 算术运算符：（以 A = 10; B =20 为例） + 把两个操作数相加 A + B 将得到 30 - 从第一个操作数中减去第二个操作数 A - B 将得到 -10 * 把两个操作数相乘 A * B 将得到 200 / 分子除以分母 B / A 将得到 2 % 取模运算符，整除后的余数 B % A 将得到 0 ++ 自增运算符，整数值增加 1 A++ 将得到 11 -- 自减运算符，整数值减少 1 A-- 将得到 9 */ study_051234567891011121314151617181920212223#include&lt;stdio.h&gt;int main(void) { int age; printf(&quot;Please input your age:\\n&quot;); scanf_s(&quot;%d&quot;, &amp;age); if (age &gt;= 18) { printf(&quot; 成年！允许玩！\\n&quot;); } printf(&quot;Hello!\\n&quot;); return 0;}/*== 检查两个操作数的值是否相等，如果相等则条件为真。 (A == B) 为假。!= 检查两个操作数的值是否相等，如果不相等则条件为真。 (A != B) 为真。&gt; 检查左操作数的值是否大于右操作数的值，如果是则条件为真。 (A &gt; B) 为假。&lt; 检查左操作数的值是否小于右操作数的值，如果是则条件为真。 (A &lt; B) 为真。&gt;= 检查左操作数的值是否大于或等于右操作数的值，如果是则条件为真。 (A &gt;= B) 为假。&lt;= 检查左操作数的值是否小于或等于右操作数的值，如果是则条件为真。 (A &lt;= B) 为真。*/ study_061234567891011121314151617181920212223242526272829303132333435#include&lt;stdio.h&gt;int main(void) { int age; int english_score; int IQ; printf(&quot;Please input your age:\\n&quot;); scanf_s(&quot;%d&quot;, &amp;age); printf(&quot;\\nPlease input your english_score:\\n&quot;); scanf_s(&quot;%d&quot;, &amp;english_score); printf(&quot;\\nPlease input your IQ:\\n&quot;); scanf_s(&quot;%d&quot;, &amp;IQ); if ((age &gt;= 18) &amp;&amp; (english_score &gt;= 90 || IQ &gt;= 120)) { printf(&quot; 允许玩！\\n&quot;); } else { printf(&quot; 禁止玩！\\n&quot;); } // &quot;{}&quot; 可读性，同时括号内是 if, else 的作用范围，不带的话只能作用一行。 return 0;}// 注意用户的不合法输入 如果没有限制，年龄可以输入负数甚至是字母 看似完美的程序实际上并不完美 // 程序的不严谨 /* 假设变量 A 的值为 1，变量 B 的值为 0 &amp;&amp; 称为逻辑与运算符。如果两个操作数都非零，则条件为真。 (A &amp;&amp; B) 为假。 || 称为逻辑或运算符。如果两个操作数中有任意一个非零，则条件为真。 (A || B) 为真。 ! 称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。 !(A &amp;&amp; B) 为真。*/","link":"/2022/05/01/C/"}],"tags":[{"name":"C语言","slug":"C语言","link":"/tags/C%E8%AF%AD%E8%A8%80/"}],"categories":[{"name":"C语言","slug":"C语言","link":"/categories/C%E8%AF%AD%E8%A8%80/"}]}